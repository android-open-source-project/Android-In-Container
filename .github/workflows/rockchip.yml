name: Build AOSP

on: push

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        lunch:
          - redroid_arm64-userdebug
          - redroid_arm64_only-userdebug
        branch:
          - redroid-12.0.0
        gpu:
          - mali-G52
    steps:
      - name: Git Settings
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: fetch branch name
        id: vars
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependency
        run: |
          sudo apt-get update
          echo "install package for building AOSP" 
          sudo apt-get install -y git-core git-lfs gnupg flex bison build-essential zip curl zlib1g-dev \
              gcc-multilib g++-multilib libc6-dev-i386 libncurses5 lib32ncurses5-dev x11proto-core-dev \
              libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig
          echo "install utils" 
          sudo apt-get install -y sudo rsync 
          echo "install packages for build mesa3d or meson related" 
          sudo apt-get install -y python3-pip pkg-config python3-dev ninja-build
          sudo pip3 install mako meson 
          echo "packages for legacy mesa3d (< 22.0.0)" 
          sudo apt-get install -y python2 python-mako python-is-python2 python-enum34 gettext
          sudo curl https://storage.googleapis.com/git-repo-downloads/repo > /usr/bin/repo
          sudo chmod a+rx /usr/bin/repo

      - name: Cache Dir
        run: echo "CACHE_DIR=$(pwd)/aosp" >> $GITHUB_ENV

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-aosp-${{ matrix.branch }}
          restore-keys: |
            ${{ runner.os }}-aosp-${{ matrix.branch }}

      - name: Sync Code
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p aosp
          cd aosp
          repo init -u https://github.com/redroid-rockchip/platform_manifests.git -b ${{ matrix.branch }} --depth=1 --git-lfs
          repo sync -c
          repo forall -g lfs -c git lfs pull
        shell: bash

      - name: Compile AOSP
        run: |
          cd aosp
          export TARGET_BOARD_PLATFORM_GPU=${{ matrix.gpu }}
          export TARGET_RK_GRALLOC_VERSION=4
          source build/envsetup.sh
          lunch aosp_arm-eng
          make -j$(nproc)
        shell: bash

      - name: Save Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-aosp-${{ matrix.branch }}

      - name: Collect Artifacts
        run: |
          PRODUCT_OUT=$(source aosp/build/envsetup.sh > /dev/null && get_build_var PRODUCT_OUT)
          mkdir -p $GITHUB_WORKSPACE/artifacts
          cp $PRODUCT_OUT/system.img $GITHUB_WORKSPACE/artifacts/system-${{ matrix.lunch }}-${{ env.ANDROID_VERSION }}.img
          cp $PRODUCT_OUT/vendor.img $GITHUB_WORKSPACE/artifacts/vendor-${{ matrix.lunch }}-${{ env.ANDROID_VERSION }}.img
        shell: bash

      - name: Create or Update Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.branch }}
          release_name: 'AOSP Build - ${{ matrix.branch }}'
          draft: false
          prerelease: false

      - name: Upload Release System
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/system-${{ matrix.lunch }}-${{ env.ANDROID_VERSION }}.img
          asset_name: system-${{ matrix.lunch }}-${{ env.ANDROID_VERSION }}.img
          asset_content_type: application/octet-stream

      - name: Upload Release Vendor
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/vendor-${{ matrix.lunch }}-${{ env.ANDROID_VERSION }}.img
          asset_name: vendor-${{ matrix.lunch }}-${{ env.ANDROID_VERSION }}.img
          asset_content_type: application/octet-stream

